* DOM的全称 Document Object Model，译为文档对象模型
   * 三个对象
     * document(文档)对象
     * node(节点)对象
     * element(元素)对象

* 元素和节点的区别
     * 元素 - 本身就是指标签
       * 标签的属性
       * 标签的文本
     * 节点
       * 元素节点(标签)
       * 属性节点(属性)
       * 文本节点(文本)

 * 三种关系
     * 祖先与后代的关系
       * 祖先节点 - 父节点的父节点的父节点...
       * 后代节点 - 子节点的子节点的子节点...
     * 父与子的关系
       * 父节点
       * 子节点
     * 兄弟的关系(同一个父节点)

* 判断节点类型
   * nodeName - 节点名称
     * 文档节点 -> #document
     * 元素节点 -> 标签名
     * 属性节点 -> 属性名
     * 文本节点 -> #text
   * nodeType - 节点类型
     * 文档节点 -> 9
     * 元素节点 -> 1
     * 属性节点 -> 2
     * 文本节点 -> 3
   * nodeValue - 节点值
     * 文档节点 -> null
     * 元素节点 -> null
     * 属性节点 -> 属性值
     * 文本节点 -> 文本内容

* 创建节点
     * 元素节点 - createElement(标签名)
     * 文本节点 - createTextNode(文本内容)
     * 属性节点(了解) - 并不是子节点
       * 创建属性节点 - createAttribute(属性名)
       * 为属性节点设置值 - attrNode.nodeValue = 值
       * 将属性节点添加到元素节点 - element.setAttributeNode(attrNode)
     * 特殊属性(了解)
            * head属性 - 获取到页面中的<head>标签 document.head
            * body属性 - 获取到页面中的<body>标签 document.head
            * documentElement属性 - 获取到页面中的<html>标签 document.documentElement

 * 插入节点
     * parent.appendChild(child)方法
       * 将 child 插入到 parent 节点的所有子节点列表的最后
     * parent.insertBefore(newChild,oldChild)
       * 将 newChild 插入到 parent 节点中子节点为 oldChild 的前面

* Node对象
   * 遍历节点
     * 父节点 - parentNode
       * parentNode与parentElement的区别
         * parentNode - Node对象的属性
           * 如果当前标签为<html>的话，parentNode是document对象
         * parentElement - Element对象的属性
           * 如果当前标签为<html>的话，parentElement是null值
     * 子节点
       * firstChild - 第一个子节点
       * lastChild - 最后一个子节点
       * childNodes - 所有子节点的列表(NodeList)
     * 兄弟节点
       * previousSibling - 前一个兄弟节点
       * nextSibling - 后一个兄弟节点
     * 空白节点
       * 原因 - HTML代码编写时换行符产生的
       * 实际 - 空白的文本节点
       * 场景
         * 当从父节点获取子节点时
         * 当目标节点获取兄弟节点时

* Element对象
   * 概念
     * 节点与元素的区别
       * 相同点 - (目的)获取或操作HTML页面中的内容
       * 不同点
         * 节点 - 元素节点、属性节点和文本节点 -> DOM节点树结构
         * 元素 - 元素、元素的属性和元素的文本 -> DOM元素树结构
   * 遍历元素
     * 父元素 - parentElement
     * 子元素
       * firstElementChild - 第一个子元素
       * lastElementChild - 最后一个子元素
       * children - 所有子元素列表
     * 兄弟元素
       * previousElementSibling - 前一个兄弟元素
       * nextElementSibling - 后一个兄弟元素
     * 注意
       * 并没有类似于遍历节点中的空白节点问题
       * 并不是所有浏览器都支持元素的遍历属性
   * 属性操作
     * 获取属性 - getAttribute(属性名)
     * 设置属性 - setAttribute(属性名, 属性值)
     * 删除属性 - removeAttribute(属性名)
     * 判断属性 - hasAttribute(属性名)
       * hasAttribute()与hasAttributes()的区别
   * 文本操作
     * nodeValue属性 - 获取和设置文本内容
     * innerText属性和textContent属性 - 获取和设置文本内容
       * innerText属性 - 只在 IE 浏览器中支持
       * textContent属性 - 是在其他浏览器中支持
         * 注意 - IE 8以下版本不支持(结果为 undefined)
 * HTML操作 - innerHTML属性
   * 作用 - 获取和设置指定标签中的HTML代码
   * 注意 - 安全性不高
   * 不建议 - 不要使用 innerHTML 属性接收用户输入的内容
 * CSS 操作
   * 操作内联样式
     * 标签中的 style 属性 - 获取和设置内联样式
       * 直接操作 CSS 中的样式属性
       * 只能操作 style 属性自己的样式内容(其他的样式内容无法操作)
     * 标签中的 class 属性 - 获取和设置内联样式
       标签.className 属性 -> 与保留字 class 同名
       * 通过操作 CSS 的类选择器
     * 操作方式
       * 标签.style属性
         * 这种方式获取或设置属性 - 仅限于通用属性
       * 通过属性获取或设置 - 更通用
         * 标签.getAttribute()
         * 标签.setAttribute()